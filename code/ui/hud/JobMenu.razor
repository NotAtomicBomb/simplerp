@using Sandbox;
@using Sandbox.UI;
@using System.Linq;

@namespace MyGame
@inherits Panel
@attribute [StyleSheet]
 @if (Hidden == false)
{
    <root>
        <div class="menu-container flex-column center">
            <h1 class="header-font">Available Jobs</h1>
            <div class="jobs-container">
                @foreach (var entry in (GameManager.Current as SimpleRp).Jobs.GroupBy(x => x.Value.Category))
                {
                    <h1 class="center-text">@entry.Key</h1>
                    <div class="category">
                    @foreach (var collection in entry)
                    {
                        <div class="job-card flex-column" onclick="@(() => ConsoleSystem.Run("switch_job", collection.Key))">
                            <h3 class="job-text center-text">@collection.Value.Name</h3>
                            @switch (collection.Value.MaxPlayers)
                            {
                                case 0:
                                    <h4 class="center-text">@collection.Value.CurrentNumberOfPlayers</h4>
                                    break;
                                default:
                                    <h4 class="center-text">@collection.Value.CurrentNumberOfPlayers/@collection.Value.MaxPlayers</h4>
                                    break;
                            }
                        </div>   
                    }
                   </div>
                }
            </div>
        </div>
    
    </root>
 }

@code
{
    static JobMenu Instance;
    bool Hidden { get; set; } = true;

    

    /// <summary>
    /// Toggles JobMenu.
    /// </summary>
    void ToggleUI() {
        Hidden = !Hidden;
        Mouse.Position = new Vector2 { x = Screen.Width/2, y = Screen.Height/2 };
        StateHasChanged();
    }

    /// <summary>
    /// Runs every tick.
    /// </summary>
    public override void Tick() {
        base.Tick();


        if (Input.Pressed("jobtoggle")) 
        {
            ToggleUI();
        }

        if(Instance == null)
        {
            Instance = this;
        }

    }

    [ClientRpc]
    public static void UpdateInfo()
    {
        if (Instance != null)
        {
            Instance.StateHasChanged();
        }
    }

}
